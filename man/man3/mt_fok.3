.TH "MT_FOK" "3" "17 January 2018 (v1.1.0)" "bofc.pl"

.SH NAME

mt_fok, mt_ferr - shortcut macro to test if function executed as expected.

.SH SYNOPSIS

.B #include <mtest.h>
.sp
.BI "mt_fok(" function_call ")"
.br
.BI "mt_ferr(" function_call ", " errno_value ")"
.sp

.SH DESCRIPTION

Macros are a simple shortcuts to perform test on functions that return either
-1 or 0. By convention 0 means success and -1 means error and error reason is
stored in \fBerrno\fR variable. If function returns different values than 0
or -1, ordinary \fBmt_fail\fR(3) should be used instead.

\fBmt_fok\fR(3) simply expects that function returns 0.

\fBmt_ferr\fR(3) expects function to return -1, and sets \fBerrno\fR value to
\fIerrno_value\fR.

Both functions uses \fBmt_fail\fR(3) under the hood.

.SH EXAMPLE

.nf
#include <mtest.h>
#include <errno.h>

mt_defs();

static int f1(void)
{
    return 0;
}

static int f2(void)
{
    errno = ENOSYS;
    return -1;
}

static void t1(void)
{
    mt_fok(f1());
    mt_ferr(f2(), ENOSYS);
}

int main(void)
{
    mt_run(t1);
    mt_return();
}
.fi

.SH "SEE ALSO"

.BR mt_defs (3),
.BR mt_defs_ext (3),
.BR mt_run (3),
.BR mt_run_named (3),
.BR mt_assert (3),
.BR mt_fail (3),
.BR mt_return (3)
.BR mtest_overview (7),
