.TH "MT_RUN" "3" "19 Oct 2017 (v0.2.0)" "bofc.pl"

.SH NAME
mt_run - runs specific test

.SH SYNOPSIS
.B #include <mtest.h>
.sp
.BI "void (*" function_name ")(void)
.br
.BI "mt_run(" function_name ")"
.br
.br
.BI "static void (*" mt_prepare_test ")(void)"
.br
.BI "static void (*" mt_cleanup_test ")(void)"
.sp

.SH DESCRIPTION
\fBmt_run\fR() runs a single test specified in \fIfunction_name\fR. Inside
function you can call \fBmt_assert\fR() and \fBmt_fail\fR(). If none if these
functions is called inside test function, \fBmtest\fR will mark test as
successful. After function finishes its work, \fBmt_run\fR() will print test
status and a \fIfunction_name\fR to know which test passed or failed.

Optionally user can also set two function pointers \fImt_prepare_test\fR and
\fImt_cleanup_test\fR that take no argument and return nothing. These functions
will be called before and after calling test \fIfunction_name\fR.

.SH EXAMPLE
.nf

#include <mtest.h>
#include "foo.h"

mt_defs();

static void test(void)
{
    mt_assert(foo() == 0);
}

int main(void)
{
    mt_run(test);

    mt_return();
}

.fi

.SH "SEE ALSO"
.BR mt_defs (3),
.BR mt_defs_ext (3),
.BR mt_assert (3),
.BR mt_fail (3),
.BR mt_fok (3),
.BR mt_ferr (3),
.BR mt_return (3)
